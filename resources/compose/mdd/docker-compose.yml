version: '3.8'

services:
  
  mdd-auth-api:
    image: mdd-auth-api:0.0.1
    container_name: mdd-auth-api
    env_file: "default.env"
    volumes:
      - ${LOCAL_WORKSPACE_FOLDER}/resources/compose/mdd/props/auth-api-application.properties:/application.properties
    ports:
      - 8080
    networks:
      - backend
    depends_on:
      mdd-postgres:
        condition: service_started

  mdd-users-api:
    image: mdd-users-api:0.0.1
    container_name:  mdd-users-api
    env_file: "default.env"
    volumes:
      - ${LOCAL_WORKSPACE_FOLDER}/resources/compose/mdd/props/users-api-application.properties:/application.properties
    ports:
      - 8080
    networks:
      - backend
    depends_on:
      mdd-postgres:
        condition: service_started

  mdd-posts-api:
    image: mdd-posts-api:0.0.1
    container_name: mdd-posts-api
    env_file: "default.env"
    volumes:
      - ${LOCAL_WORKSPACE_FOLDER}/resources/compose/mdd/props/posts-api-application.properties:/application.properties
    ports:
      - 8080
    networks:
      - backend
    depends_on:
      mdd-mongodb:
        condition: service_started

  mdd-subs-api:
    image: mdd-subs-api:0.0.1
    container_name: mdd-subs-api
    env_file: "default.env"
    volumes:
      - ${LOCAL_WORKSPACE_FOLDER}/resources/compose/mdd/props/subs-api-application.properties:/application.properties
    ports:
      - 8080
    networks:
      - backend
    depends_on:
      mdd-mongodb:
        condition: service_started

  mdd-feeds-api:
    image: mdd-feeds-api:0.0.1
    container_name: mdd-feeds-api
    env_file: "default.env"
    volumes:
      - ${LOCAL_WORKSPACE_FOLDER}/resources/compose/mdd/props/feeds-api-application.properties:/application.properties
    ports:
      - 8080
    networks:
      - backend
    depends_on:
      mdd-postgres:
        condition: service_started
        
  mdd-api-gateway:
    image: mdd-api-gateway:0.0.1
    container_name: mdd-api-gateway
    env_file: "default.env"
    volumes:
      - ${LOCAL_WORKSPACE_FOLDER}/resources/compose/mdd/props/api-gateway-application.yml:/application.yml
    ports:
      - 8080
    networks:
      - frontend
      - backend
    depends_on:
      mdd-auth-api:
        condition: service_started
      mdd-feeds-api:
        condition: service_started
      mdd-posts-api:
        condition: service_started
      mdd-subs-api:
        condition: service_started
      mdd-users-api:
        condition: service_started

  mdd-front:
    image: mdd-front-end:0.0.1
    container_name: mdd-front-end
    env_file: "default.env"
    volumes:
      - ${LOCAL_WORKSPACE_FOLDER}/resources/compose/mdd/props/front-nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 80:80
    networks:
      - backend
      - frontend
    depends_on:
      mdd-api-gateway:
        condition: service_started

  mdd-mongodb:
    image: mongo
    container_name: mdd-mongodb-server
    env_file: "default.env"
    volumes:
      - data-mongodb:/data/db
      - ${LOCAL_WORKSPACE_FOLDER}/resources/compose/mdd/init-db/mongo-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - 27017:27017
    networks:
      - backend

  mdd-postgres:
    image: postgres
    container_name: mdd-postgres-server
    env_file: "default.env"
    volumes:
      - data-postgres:/var/lib/postgresql/data
      - ${LOCAL_WORKSPACE_FOLDER}/resources/compose/mdd/init-db/postgres-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - 5432
    networks:
      - backend

  mdd-kafka:
    image: apache/kafka
    container_name: mdd-kafka-server
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://mdd-kafka:9092,CONTROLLER://mdd-kafka:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://mdd-kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@mdd-kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    ports:
      - 9092
      - 9093
    networks:
      - backend
      
volumes:
  data-mongodb:
  data-postgres:

networks:
  frontend:
    # Specify driver options
    driver: bridge
  backend:
    # Use a custom driver
    driver: bridge
