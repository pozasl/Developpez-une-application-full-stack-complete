openapi: 3.0.1
info:
  title: MDD OpenAPI definition
  version: v0.0.1
servers:
  - url: http://localhost:8080
    description: Local server url
paths:
  /api/posts/{id}:
    get:
      tags:
        - posts-api
      summary: Get a Post by its id
      operationId: getPostById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
      security:
        - Authorization: []
  /api/posts:
    post:
      tags:
        - posts-api
      summary: Add a new Post
      operationId: createPost
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NewPost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
      security:
        - Authorization: []
  /api/posts/{id}/replies:
    post:
      tags:
        - message-controller
      summary: Post a new message
      operationId: createReply
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewReply'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
      security:
        - Authorization: []
  /api/auth/register:
    post:
      tags:
        - auth-controller
      summary: Register a new User
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtInfo'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
  /api/auth/login:
    post:
      tags:
        - auth-controller
      summary: Login an existing user
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthInfo'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtInfo'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
  /api/user/{id}:
    get:
      tags:
        - user-controller
      summary: Get a User by its id
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
      security:
        - Authorization: []
components:
  schemas:
    ResponseMessage:
      type: object
      properties:
        message:
          type: string
    NewPost:
      required:
        - description
        - name
        - price
        - surface
      type: object
      properties:
        title:
          maxLength: 255
          minLength: 0
          type: string
        content:
          maxLength: 2000
          minLength: 0
          type: string
    NewReply:
      required:
        - message
      type: object
      properties:
        message:
          maxLength: 2000
          minLength: 0
          type: string
        author_id:
          type: integer
          format: int32
    NewUser:
      required:
        - email
        - name
        - password
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
        email:
          maxLength: 255
          minLength: 0
          type: string
        password:
          type: string
    JwtInfo:
      type: object
      properties:
        token:
          type: string
    AuthInfo:
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        email:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
    Topic:
      type: object
      properties:
        ref:
          type: string
        name:
          type: string
        description:
          type: string
    Post:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        topic:
          type: string
        content:
          type: string
        author_id:
          type: integer
          format: int64
        created_at:
          type: string
        updated_at:
          type: string
    Reply:
      type: object
      properties:
        content:
          type: string
        author_id:
          type: integer
          format: int64
        created_at:
          type: string
    PostsCollection:
      type: object
      properties:
        rentals:
          type: array
          items:
            $ref: '#/components/schemas/Post'
    RepliesCollection:
      type: object
      properties:
        rentals:
          type: array
          items:
            $ref: '#/components/schemas/Reply'
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      bearerFormat: JWT